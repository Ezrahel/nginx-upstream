name: CI - Blue/Green failover test

on:
  push:
    branches: [ main, master ]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    env:
      
      BLUE_IMAGE: ${{ secrets.BLUE_IMAGE }}
      GREEN_IMAGE: ${{ secrets.GREEN_IMAGE }}
      ACTIVE_POOL: ${{ secrets.ACTIVE_POOL }}
      RELEASE_ID_BLUE: ${{ secrets.RELEASE_ID_BLUE }}
      RELEASE_ID_GREEN: ${{ secrets.RELEASE_ID_GREEN }}
      PORT: ${{ secrets.PORT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env for docker-compose
        run: |
          # Use secrets if available, otherwise fall back to default env values
          cat > .env <<EOF
          BLUE_IMAGE=${BLUE_IMAGE}
          GREEN_IMAGE=${GREEN_IMAGE}
          ACTIVE_POOL=${ACTIVE_POOL}
          RELEASE_ID_BLUE=${RELEASE_ID_BLUE}
          RELEASE_ID_GREEN=${RELEASE_ID_GREEN}
          PORT=${PORT}
          EOF

      - name: Start docker-compose and wait for health checks
        run: |
          docker compose up -d --wait
          # Additional wait to ensure Nginx is fully configured
          sleep 5
          # Verify services are responding
          curl --retry 5 --retry-delay 2 --retry-connrefused http://localhost:8080/healthz || (docker compose logs && exit 1)

      - name: Run failover verification (PowerShell)
        shell: pwsh
        run: |
          pwsh -File ./test/verify.ps1

      - name: Tear down
        if: always()
        run: |
          docker compose down -v
